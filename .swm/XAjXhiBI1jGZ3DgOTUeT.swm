{
    "id": "XAjXhiBI1jGZ3DgOTUeT",
    "name": "Genre War",
    "dod": "Make the tests pass.",
    "description": "Big Boss is rethinking their brand. `Rock Em' Socks!` might be the biggest musical emporium around but you always need to keep up with the times!\n\nThey want you to figure out what's the most profitable music genre in the store. Perhaps `Pop Em' Socks!` will make a comeback? What about `Jazz Em' Socks!` or `Blues Em' Socks!` ? Only one way to find out!\n\nIn this unit we'll learn about joining tables together for fun and (mostly) profit.\n\n## Recommended References:\n* https://www.tutorialspoint.com/sqlalchemy/sqlalchemy_orm_working_with_joins.htm\n* https://docs.sqlalchemy.org/en/13/orm/tutorial.html#querying-with-joins",
    "summary": "In this unit we've determined what `Rock Em' Socks!` name should _really_ be, and on the way learned about `join`ing tables together.\n\nNotice how the first data you query about determines the \"base\" table, on which all joins will be made.\n\nAlso, when joining without a connecting foreign key you'll need to specify the right column to join on (just like in normal SQL).",
    "tests": [
        "python -m pytest tests/test_profitable_music_genre.py"
    ],
    "hints": [
        "You can use the database's diagram in order to figure out what tables to join.",
        "Notice the order you join the tables in! The first data you query about will determine the base table."
    ],
    "swimmPatch": {
        "src/profitable_music_genre.py": {
            "diffType": "MODIFIED",
            "fileDiffHeader": "diff --git a/src/profitable_music_genre.py b/src/profitable_music_genre.py\nindex cad6f0b..4497ad1 100644\n--- a/src/profitable_music_genre.py\n+++ b/src/profitable_music_genre.py",
            "hunks": [
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -1,7 +1,6 @@",
                        " import decimal",
                        " import sqlalchemy as db",
                        " from sqlalchemy.orm import sessionmaker",
                        "-from sqlalchemy.sql import func",
                        " ",
                        " from src import rockemsocks",
                        " "
                    ]
                },
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -17,15 +16,4 @@",
                        "     The second member in this pairing is called 'genre_name' and it's the musical genre for which we're counting the profits.",
                        "     The pairings are returned in a descending order according to the their total price.",
                        "     \"\"\"",
                        "-    session = Session()",
                        "+    pass",
                        "-    return (",
                        "-        session.query(",
                        "-            func.sum(rockemsocks.Tracks.UnitPrice).label('total_invoice_profit'),",
                        "-            rockemsocks.Genres.Name.label('genre_name'),",
                        "-        )",
                        "-        .join(rockemsocks.Genres)",
                        "-        .join(rockemsocks.InvoiceItem)",
                        "-        .group_by(rockemsocks.Genres.GenreId)",
                        "-        .order_by(db.desc('total_invoice_profit'))",
                        "-        .all()",
                        "-    )"
                    ]
                }
            ]
        }
    },
    "app_version": "0.2.4",
    "file_version": "1.0.3"
}