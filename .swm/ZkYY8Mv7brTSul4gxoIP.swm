{
    "id": "ZkYY8Mv7brTSul4gxoIP",
    "name": "Geographical Statistics",
    "file_version": "2.0.1",
    "meta": {
        "app_version": "0.4.4-0",
        "file_blobs": {
            "src/count_customer_countries.py": "35d5b5da6828c6448869212268076787b5083060"
        }
    },
    "content": [
        {
            "type": "text",
            "text": "It's bookkeeping time in `Rock Em' Socks!` and Big Boss wants you to help the process.\nThey need to quantify the company's outreach (as you all want to keep your status as a true global superpower).\nHelp count the number of countries our customer's came from!\n\nIn this unit we'll learn about querying and grouping data.\n\n## Recommended References\n* https://www.tutorialspoint.com/sqlalchemy/sqlalchemy_orm_using_query.htm\n* https://www.tutorialspoint.com/sqlalchemy/sqlalchemy_orm_applying_filter.htm\n* https://docs.sqlalchemy.org/en/13/orm/tutorial.html#querying"
        },
        {
            "type": "snippet",
            "path": "src/count_customer_countries.py",
            "comments": [],
            "firstLineNumber": 14,
            "lines": [
                "     :return: Number of unique countries that customers live in.",
                "     :rtype: int",
                "     \"\"\"",
                "*    session = Session()",
                "+    pass",
                "*    cust = rockemsocks.Customers",
                "*    return session.query(cust.CustomerId).group_by(cust.Country).count()"
            ]
        },
        {
            "type": "text",
            "text": "In this unit we've learned how to query data from a database.\nMoreover, we've experimented with one of few ways to get unique results from a database (while, of course, there are many more)."
        }
    ],
    "task": {
        "dod": "Make the tests pass.",
        "hints": [
            "Think what SQL statement can help you get unique data (there are a few!)",
            "There's no need to use `len`, `SQLAlchemy` gives you a better way to count the number of rows returned."
        ],
        "tests": [
            "python -m pytest tests/test_count_customer_countries.py"
        ]
    }
}
