{
    "id": "L1GG2Efzgz2WgTORQzxB",
    "name": "The ABC Game",
    "dod": "Make the tests pass.",
    "description": "",
    "summary": "",
    "tests": [
        "python -m pytest tests/test_first_letter_artists_count.py"
    ],
    "hints": [],
    "swimmPatch": {
        "src/first_letter_artists_count.py": {
            "diffType": "MODIFIED",
            "fileDiffHeader": "diff --git a/src/first_letter_artists_count.py b/src/first_letter_artists_count.py\nindex 05d728c..9c0faf5 100644\n--- a/src/first_letter_artists_count.py\n+++ b/src/first_letter_artists_count.py",
            "hunks": [
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -2,7 +2,6 @@",
                        " ",
                        " import sqlalchemy as db",
                        " from sqlalchemy.orm import sessionmaker",
                        "-from sqlalchemy.sql import func",
                        " ",
                        " from src import rockemsocks",
                        " "
                    ]
                },
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -18,13 +17,4 @@",
                        "     The pairings are returned in a descending order according to the number of artists (most first, least last).",
                        "     Only pairings with a number of artists greater than 10 should be included in the returned list.",
                        "     \"\"\"",
                        "-    session = Session()",
                        "+    pass",
                        "-    first_letter_col = func.substr(rockemsocks.Artists.Name, 1, 1).label('first_letter')",
                        "-    count_artists_col = func.count(rockemsocks.Artists.ArtistId).label('count_artists')",
                        "-    return (",
                        "-        session.query(first_letter_col, count_artists_col)",
                        "-        .group_by('first_letter')",
                        "-        .having(count_artists_col > 10)",
                        "-        .order_by(db.desc('count_artists'))",
                        "-        .all()",
                        "-    )"
                    ]
                }
            ]
        }
    },
    "app_version": "0.2.3",
    "file_version": "1.0.3"
}