{
    "id": "jgtxsS1rpYXSr0wPFAFO",
    "name": "Table Flipper",
    "file_version": "2.0.1",
    "meta": {
        "app_version": "0.4.4-0",
        "file_blobs": {
            "src/create_tables.py": "e9b6c730d13f0df0cbd5f3daba86fb8d4d68a3cd",
            "utils/people/core.py": "9228f578621befbecbd20dbc657f5e3ae3028bbd"
        }
    },
    "content": [
        {
            "type": "text",
            "text": "Now that you know how to connect to a database, let's move one step further and learn how to manually create our own tables. Your dream job awaits!\n\nIn this unit you'll need to create `people.db`: a database consisting of various people and their hobbies.\n\nYou'll also need to figure out how to create foreign keys to refer to values in a different table.\n\n## Recommended References\n* https://www.tutorialspoint.com/sqlalchemy/sqlalchemy_core_creating_table.htm\n* https://docs.sqlalchemy.org/en/13/core/tutorial.html#define-and-create-tables"
        },
        {
            "type": "snippet",
            "path": "src/create_tables.py",
            "comments": [
                "Note that you can also create the tables one by one using their relevant `create` methods. Using `meta.create_all()` is a shorthand for creating _all_ of the tables defined with this meta object."
            ],
            "firstLineNumber": 15,
            "lines": [
                "         * 'user_id': integer, foreign key connected to 'users' table 'id' column",
                "     \"\"\"",
                "     engine = db.create_engine(people.PEOPLEDB_CONNECTION_STRING)",
                "*    people.PEOPLEDB_META.create_all(engine)"
            ]
        },
        {
            "type": "snippet",
            "path": "utils/people/core.py",
            "comments": [],
            "firstLineNumber": 1,
            "lines": [
                " import sqlalchemy as db",
                "*",
                "*PEOPLEDB_META = db.MetaData()",
                "*",
                "*users = db.Table(",
                "*    'users',",
                "*    PEOPLEDB_META,",
                "*    db.Column('id', db.Integer, primary_key=True, autoincrement=True),",
                "*    db.Column('first_name', db.String, nullable=False),",
                "*    db.Column('last_name', db.String, nullable=False),",
                "*)",
                "*",
                "*hobbies = db.Table(",
                "*    'hobbies',",
                "*    PEOPLEDB_META,",
                "*    db.Column('id', db.Integer, primary_key=True, autoincrement=True),",
                "*    db.Column('hobby', db.String, nullable=False),",
                "*    db.Column('user_id', db.Integer, db.ForeignKey('users.id')),",
                "*)"
            ]
        },
        {
            "type": "text",
            "text": "In this unit we've learned how to manually define the most basic Table objects. Later on we'll learn how to both get table metadata automatically from our database and create more flexible Pythonic objects to represent our data."
        }
    ],
    "task": {
        "dod": "Make the tests pass.",
        "hints": [
            "Use the primitive sqlalchemy objects to structure your tables and columns as the unit defines, look at the documentation to find the relevant flags and switches."
        ],
        "tests": [
            "python -m pytest tests/test_create_tables.py"
        ]
    }
}
