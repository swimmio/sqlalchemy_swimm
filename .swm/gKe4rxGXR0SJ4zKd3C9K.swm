{
    "id": "gKe4rxGXR0SJ4zKd3C9K",
    "name": "Happy Birthday!",
    "dod": "Make the tests pass.",
    "description": "This year, the employees of `Rock Em' Socks!` all wanted to pay special tribute to each other.\nThey wanted to start their celebrations with the oldest employees first, and the to keep on going until the younger one is reached.\nHelp them by querying the database for everyone's age (with their approval of course!).\n\nIn this Unit we'll learn about limiting our queries.\n\n## Recommended References\n* https://www.tutorialspoint.com/sqlalchemy/sqlalchemy_orm_using_query.htm\n* https://www.tutorialspoint.com/sqlalchemy/sqlalchemy_orm_applying_filter.htm\n* https://docs.sqlalchemy.org/en/13/orm/tutorial.html#querying",
    "summary": "In this Unit we've learned how to delegate limiting our queries to SQL using `SQLAlchemy`.\n\nWhenever we can delegate any busy work to our DB (assuming it's trivial, such as the case in `limit`) it's usually a good idea (rather than return possibly thousands of results to get a single row, why not request a single row from the start?).",
    "tests": [
        "python -m pytest tests/test_oldest_employees.py"
    ],
    "hints": [
        "SQL has a built in way to only return a certain number of results. Don't use Python slicing."
    ],
    "swimmPatch": {
        "src/oldest_employees.py": {
            "diffType": "MODIFIED",
            "fileDiffHeader": "diff --git a/src/oldest_employees.py b/src/oldest_employees.py\nindex be9629e..bf509d5 100644\n--- a/src/oldest_employees.py\n+++ b/src/oldest_employees.py",
            "hunks": [
                {
                    "swimmHunkMetadata": {
                        "hunkComments": []
                    },
                    "hunkDiffLines": [
                        "@@ -18,14 +18,4 @@",
                        "     :return: List of (FirstName, LastName) pairings from oldest to youngest.",
                        "     :rtype: typing.List[typing.Tuple[str, str]]",
                        "     \"\"\"",
                        "-    session = Session()",
                        "+    pass",
                        "-    empl = rockemsocks.Employees",
                        "-    return (",
                        "-        session.query(",
                        "-            empl.FirstName,",
                        "-            empl.LastName,",
                        "-        )",
                        "-        .order_by(db.asc(empl.BirthDate))",
                        "-        .limit(count_employees)",
                        "-        .all()",
                        "-    )"
                    ]
                }
            ]
        }
    },
    "app_version": "0.2.4",
    "file_version": "1.0.3"
}